/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown
      }
    }
  }
  '/box_shadows': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.box_shadows.id']
          title?: parameters['rowFilter.box_shadows.title']
          slug?: parameters['rowFilter.box_shadows.slug']
          box_shadow?: parameters['rowFilter.box_shadows.box_shadow']
          inserted_at?: parameters['rowFilter.box_shadows.inserted_at']
          shape?: parameters['rowFilter.box_shadows.shape']
          theme?: parameters['rowFilter.box_shadows.theme']
          user_id?: parameters['rowFilter.box_shadows.user_id']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['box_shadows'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** box_shadows */
          box_shadows?: definitions['box_shadows']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.box_shadows.id']
          title?: parameters['rowFilter.box_shadows.title']
          slug?: parameters['rowFilter.box_shadows.slug']
          box_shadow?: parameters['rowFilter.box_shadows.box_shadow']
          inserted_at?: parameters['rowFilter.box_shadows.inserted_at']
          shape?: parameters['rowFilter.box_shadows.shape']
          theme?: parameters['rowFilter.box_shadows.theme']
          user_id?: parameters['rowFilter.box_shadows.user_id']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.box_shadows.id']
          title?: parameters['rowFilter.box_shadows.title']
          slug?: parameters['rowFilter.box_shadows.slug']
          box_shadow?: parameters['rowFilter.box_shadows.box_shadow']
          inserted_at?: parameters['rowFilter.box_shadows.inserted_at']
          shape?: parameters['rowFilter.box_shadows.shape']
          theme?: parameters['rowFilter.box_shadows.theme']
          user_id?: parameters['rowFilter.box_shadows.user_id']
        }
        body: {
          /** box_shadows */
          box_shadows?: definitions['box_shadows']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/likes': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.likes.id']
          inserted_at?: parameters['rowFilter.likes.inserted_at']
          user_id?: parameters['rowFilter.likes.user_id']
          box_shadow_id?: parameters['rowFilter.likes.box_shadow_id']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['likes'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** likes */
          likes?: definitions['likes']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.likes.id']
          inserted_at?: parameters['rowFilter.likes.inserted_at']
          user_id?: parameters['rowFilter.likes.user_id']
          box_shadow_id?: parameters['rowFilter.likes.box_shadow_id']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.likes.id']
          inserted_at?: parameters['rowFilter.likes.inserted_at']
          user_id?: parameters['rowFilter.likes.user_id']
          box_shadow_id?: parameters['rowFilter.likes.box_shadow_id']
        }
        body: {
          /** likes */
          likes?: definitions['likes']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/users': {
    get: {
      parameters: {
        query: {
          /** References the internal Supabase Auth user. */
          id?: parameters['rowFilter.users.id']
          name?: parameters['rowFilter.users.name']
          avatar_url?: parameters['rowFilter.users.avatar_url']
          /** Filtering Columns */
          select?: parameters['select']
          /** Ordering */
          order?: parameters['order']
          /** Limiting and Pagination */
          offset?: parameters['offset']
          /** Limiting and Pagination */
          limit?: parameters['limit']
        }
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range']
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit']
          /** Preference */
          Prefer?: parameters['preferCount']
        }
      }
      responses: {
        /** OK */
        200: {
          schema: definitions['users'][]
        }
        /** Partial Content */
        206: unknown
      }
    }
    post: {
      parameters: {
        body: {
          /** users */
          users?: definitions['users']
        }
        query: {
          /** Filtering Columns */
          select?: parameters['select']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** Created */
        201: unknown
      }
    }
    delete: {
      parameters: {
        query: {
          /** References the internal Supabase Auth user. */
          id?: parameters['rowFilter.users.id']
          name?: parameters['rowFilter.users.name']
          avatar_url?: parameters['rowFilter.users.avatar_url']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
    patch: {
      parameters: {
        query: {
          /** References the internal Supabase Auth user. */
          id?: parameters['rowFilter.users.id']
          name?: parameters['rowFilter.users.name']
          avatar_url?: parameters['rowFilter.users.avatar_url']
        }
        body: {
          /** users */
          users?: definitions['users']
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn']
        }
      }
      responses: {
        /** No Content */
        204: never
      }
    }
  }
  '/rpc/handle_new_user': {
    post: {
      parameters: {
        body: {
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          args: { [key: string]: any }
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferParams']
        }
      }
      responses: {
        /** OK */
        200: unknown
      }
    }
  }
  '/rpc/get_most_popular_box_shadow': {
    post: {
      parameters: {
        body: {
          // eslint-disable-next-line @typescript-eslint/no-explicit-any
          args: { [key: string]: any }
        }
        header: {
          /** Preference */
          Prefer?: parameters['preferParams']
        }
      }
      responses: {
        /** OK */
        200: unknown
      }
    }
  }
}

export interface definitions {
  /** Box shadows design data. */
  box_shadows: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number
    title: string
    slug: string
    box_shadow: string
    inserted_at: string
    shape?: 'square' | 'circle'
    theme?: 'light' | 'dark'
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string
  }
  /** Each like on the box shadows. */
  likes: {
    /**
     * Note:
     * This is a Primary Key.<pk/>
     */
    id: number
    inserted_at: string
    /**
     * Note:
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    user_id: string
    /**
     * Note:
     * This is a Foreign Key to `box_shadows.id`.<fk table='box_shadows' column='id'/>
     */
    box_shadow_id: number
  }
  /** Profile data for each user. */
  users: {
    /**
     * References the internal Supabase Auth user.
     *
     * Note:
     * This is a Primary Key.<pk/>
     * This is a Foreign Key to `users.id`.<fk table='users' column='id'/>
     */
    id: string
    name?: string
    avatar_url?: string
  }
}

export interface parameters {
  /** Preference */
  preferParams: 'params=single-object'
  /** Preference */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none'
  /** Preference */
  preferCount: 'count=none'
  /** Filtering Columns */
  select: string
  /** On Conflict */
  on_conflict: string
  /** Ordering */
  order: string
  /** Limiting and Pagination */
  range: string
  /** Limiting and Pagination */
  rangeUnit: string
  /** Limiting and Pagination */
  offset: string
  /** Limiting and Pagination */
  limit: string
  /** box_shadows */
  'body.box_shadows': definitions['box_shadows']
  'rowFilter.box_shadows.id': string
  'rowFilter.box_shadows.title': string
  'rowFilter.box_shadows.slug': string
  'rowFilter.box_shadows.box_shadow': string
  'rowFilter.box_shadows.inserted_at': string
  'rowFilter.box_shadows.shape': string
  'rowFilter.box_shadows.theme': string
  'rowFilter.box_shadows.user_id': string
  /** likes */
  'body.likes': definitions['likes']
  'rowFilter.likes.id': string
  'rowFilter.likes.inserted_at': string
  'rowFilter.likes.user_id': string
  'rowFilter.likes.box_shadow_id': string
  /** users */
  'body.users': definitions['users']
  /** References the internal Supabase Auth user. */
  'rowFilter.users.id': string
  'rowFilter.users.name': string
  'rowFilter.users.avatar_url': string
}
